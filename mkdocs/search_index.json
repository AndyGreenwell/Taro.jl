{
    "docs": [
        {
            "location": "/", 
            "text": "Taro \u2013 Work with Excel, Word and PDF files in Julia\n\n\n\n\nTaro \u2013 Work with Excel, Word and PDF files in Julia\n\n\nTypes and Function Reference\n\n\n\n\n\n\n\n\nTaro is a utility belt of functions to work with document files in Julia. It uses \nApache Tika\n, \nApache POI\n and \nApache FOP\n  (via \nJavaCall\n) to work with Word, Excel and PDF files.\n\n\nPackage Features\n\n\n\n\nExtract raw text from Word, Excel, PDF files\n\n\nExtract tabular data from Excel files into a DataFrame (\nreadxl\n, like \nreadtable\n)\n\n\nAPI to read and write Excel files from Julia\n\n\nConvert \nxsl-fo\n files to PDFs for templated document generation", 
            "title": "Home"
        }, 
        {
            "location": "/#taro-work-with-excel-word-and-pdf-files-in-julia", 
            "text": "Taro \u2013 Work with Excel, Word and PDF files in Julia  Types and Function Reference     Taro is a utility belt of functions to work with document files in Julia. It uses  Apache Tika ,  Apache POI  and  Apache FOP   (via  JavaCall ) to work with Word, Excel and PDF files.", 
            "title": "Taro \u2013 Work with Excel, Word and PDF files in Julia"
        }, 
        {
            "location": "/#package-features", 
            "text": "Extract raw text from Word, Excel, PDF files  Extract tabular data from Excel files into a DataFrame ( readxl , like  readtable )  API to read and write Excel files from Julia  Convert  xsl-fo  files to PDFs for templated document generation", 
            "title": "Package Features"
        }, 
        {
            "location": "/api/", 
            "text": "Types and Function Reference\n\n\n\n\nTaro.extract\n\n\nTaro.fromExcelDate\n\n\nTaro.getExcelDate\n\n\nTaro.readxl\n\n\n\n\n#\n\n\nTaro.extract\n \n \nFunction\n.\n\n\nExtract raw text from documents. Uses Apache Tika. Works with any document format    supported by Apache Tika. At least Word, Excel, PDF, PPT.     filename: path of file to process\n\n\n#\n\n\nTaro.fromExcelDate\n \n \nFunction\n.\n\n\nConvert an Excel style date to a Julia DateTime object    Excel stores dates and times as  a floating point number    representing the fractional days since 1/1/1900 (or 1/1/1904)\n\n\n#\n\n\nTaro.getExcelDate\n \n \nFunction\n.\n\n\nConvert a Julia DateTime object into an Excel Date.   Excel stores dates and times as  a floating point number   representing the fractional days since 1/1/1900 (or 1/1/1904)\n\n\n#\n\n\nTaro.readxl\n \n \nFunction\n.\n\n\nRead tabular data out of an excel file into a Julia Dataframe. This is similar to the    \nreadtable\n function in the Dataframes package that reads a CSV file into a Dataframe    \nfilename\n : path of excel file (.xls or .xlsx)    \nsheet\n: sheet name or number (0-based)    \nrange\n: string containing excel range to read. eg. B4:D45\n\n\nOptional Arguments : similar to \nDataframes.readtable\n    \nheader::Bool = true\n    \nnastrings::Vector = ASCIIString[\"\", \"NA\"]\n    \ntruestrings::Vector = ASCIIString[\"T\", \"t\", \"TRUE\", \"true\"]\n    \nfalsestrings::Vector = ASCIIString[\"F\", \"f\", \"FALSE\", \"false\"]\n    \ncolnames::Vector = Symbol[]\n    \ncoltypes::Vector{Any} = Any[]\n    \nskipstart::Int = 0\n    \nskiprows::Vector{Int} = Int[]\n    \nskipblanks::Bool = true", 
            "title": "Manual"
        }, 
        {
            "location": "/api/#types-and-function-reference", 
            "text": "Taro.extract  Taro.fromExcelDate  Taro.getExcelDate  Taro.readxl   #  Taro.extract     Function .  Extract raw text from documents. Uses Apache Tika. Works with any document format    supported by Apache Tika. At least Word, Excel, PDF, PPT.     filename: path of file to process  #  Taro.fromExcelDate     Function .  Convert an Excel style date to a Julia DateTime object    Excel stores dates and times as  a floating point number    representing the fractional days since 1/1/1900 (or 1/1/1904)  #  Taro.getExcelDate     Function .  Convert a Julia DateTime object into an Excel Date.   Excel stores dates and times as  a floating point number   representing the fractional days since 1/1/1900 (or 1/1/1904)  #  Taro.readxl     Function .  Read tabular data out of an excel file into a Julia Dataframe. This is similar to the     readtable  function in the Dataframes package that reads a CSV file into a Dataframe     filename  : path of excel file (.xls or .xlsx)     sheet : sheet name or number (0-based)     range : string containing excel range to read. eg. B4:D45  Optional Arguments : similar to  Dataframes.readtable      header::Bool = true      nastrings::Vector = ASCIIString[\"\", \"NA\"]      truestrings::Vector = ASCIIString[\"T\", \"t\", \"TRUE\", \"true\"]      falsestrings::Vector = ASCIIString[\"F\", \"f\", \"FALSE\", \"false\"]      colnames::Vector = Symbol[]      coltypes::Vector{Any} = Any[]      skipstart::Int = 0      skiprows::Vector{Int} = Int[]      skipblanks::Bool = true", 
            "title": "Types and Function Reference"
        }
    ]
}